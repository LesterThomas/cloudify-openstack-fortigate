tosca_definitions_version: cloudify_dsl_1_3
imports:
  - 'http://www.getcloudify.org/spec/cloudify/4.0.1/types.yaml'
  - 'http://www.getcloudify.org/spec/openstack-plugin/2.0.1/plugin.yaml'
  - types/cloud_config/cloud-config.yaml
inputs:
  fortigate_image:
    description: The Openstack Image ID of the Fortigate server
    type: string
  flavor:
    description: An Openstack Flavor ID.
    default:
      { get_secret: small_image_flavor }
  public_network:
    default:
      { get_secret: public_network_name }
    type: string
  public_network_subnet:
    default:
      { get_secret: public_subnet_name }
    type: string
  private_network:
    default: { get_secret: private_network_name }
    type: string
  private_subnet:
    default: { get_secret: private_subnet_name }
    type: string
  application_network:
    default: { get_secret: default_network_name }
    type: string
  application_subnet:
    default: { get_secret: default_subnet_name }
    type: string  
  webserver_port:
    description: The Fortigate server port
    default: 80
    
dsl_definitions:
  openstack_config: &openstack_config
    username: { get_secret: keystone_username }
    password: { get_secret: keystone_password }
    tenant_name: { get_secret: keystone_tenant_name }
    auth_url: { get_secret: keystone_url }
    region: { get_secret: region }
    
node_templates:
  fortigate_server:
    type: cloudify.openstack.nodes.Server
    properties:
      agent_config:
        install_method: none
      openstack_config: *openstack_config
      server:
        key_name: ''
        image: { get_input: fortigate_image }
        flavor: { get_input: flavor }
      management_network_name:
        get_property:
          - public_network
          - resource_id
    relationships:
      - target: private_network
        type: cloudify.relationships.connected_to
      - target: application_network
        type: cloudify.relationships.connected_to    
      - target: server_float_ip
        type: cloudify.openstack.server_connected_to_floating_ip
  public_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id:
        get_input: public_network_subnet
      use_external_resource : true
      openstack_config: *openstack_config
    relationships:
      - type: cloudify.relationships.contained_in
        target: public_network
  public_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id:
        get_input: public_network
      use_external_resource : true   
      openstack_config: *openstack_config
  security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      rules:
        - port: 22
          remote_ip_prefix: 0.0.0.0/0
        - port:
            get_input: webserver_port
          remote_ip_prefix: 0.0.0.0/0
      security_group:
        name: security_group
        description: generic security group
      openstack_config: *openstack_config
  ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name:
          get_secret: external_network_name
      openstack_config: *openstack_config
  private_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id:
        get_input: private_network
      use_external_resource : true
      openstack_config: *openstack_config
    
  private_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id:
        get_input: private_subnet
      use_external_resource : true
      openstack_config: *openstack_config
    relationships:
      - type: cloudify.relationships.contained_in
        target: private_network

  application_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id:
        get_input: application_network
      use_external_resource : true
      openstack_config: *openstack_config
    
  application_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id:
        get_input: application_subnet
      use_external_resource : true
      openstack_config: *openstack_config
    relationships:
      - type: cloudify.relationships.contained_in
        target: application_network        
  server_float_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      openstack_config: *openstack_config
      floatingip:
        floating_network_name: { get_secret: external_network_name }
       
groups: {}
outputs:
  endpoint:
    description: Web application endpoint
    value:
      concat:
        - 'http://'
        - get_attribute:
            - server_float_ip
            - floating_ip_address
        - ':'
        - get_input: webserver_port
        - /
